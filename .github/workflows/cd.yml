name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # QEMU 설정
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 2. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드 및 Push
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # 빌드할 플랫폼을 'linux/arm64'로 지정
          platforms: linux/arm64
          # Docker Hub에 바로 푸시
          push: true
          # 이미지 태그 지정
          tags: ${{ secrets.DOCKER_USERNAME }}/taja:latest

      # 4. 라즈베리파이에 배포
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          script: |
            cd ~/taja || mkdir -p ~/taja && cd ~/taja

            # 1) .env 파일 생성
            cat > .env <<EOF
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            API_KEY=${{ secrets.API_KEY }}
            API_BASE_URL=${{ secrets.API_BASE_URL }}
            STATUS_API_PATH=${{ secrets.STATUS_API_PATH }}
            STATION_API_PATH=${{ secrets.STATION_API_PATH }}
            EOF

            # 2) 기존 컨테이너 중지/삭제
            docker stop taja || true
            docker rm taja || true

            # 3) 최신 이미지 Pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/taja:latest

            # 4) Docker 실행 (환경변수 .env 주입)
            docker run -d \
              --name taja \
              --env-file .env \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/taja:latest
